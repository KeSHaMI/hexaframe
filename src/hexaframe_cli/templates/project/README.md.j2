# {{ project_name }}

Scaffolded with Hexaframe CLI.

This template includes:
- FastAPI app with a ping endpoint
- Docker Compose with Postgres and an app service
- .env configuration
- SQLAlchemy (async) + Alembic
- Simple DI container exposing DB utilities and a Pong use case

## Quick start

### 0) Prerequisites
- Python 3.11+
- Docker and Docker Compose
- uv (https://github.com/astral-sh/uv) or pip

### 1) Local run (without Docker)
1. Create venv and install:
   uv venv
   source .venv/bin/activate
   uv pip install --index-strategy unsafe-best-match hatchling>=1.20 editables>=0.5
   uv pip install --no-build-isolation -e .

2. Configure environment:
   - Copy and edit .env if needed (defaults use localhost).

3. Run DB migrations (optional initially, once you add models):
   alembic upgrade head

4. Start app:
   uv run uvicorn {{ package_name }}.interface.http.app:app --reload

5. Test ping:
   curl http://127.0.0.1:8000/ping

### 2) Run with Docker Compose (DB + app)
1. Start services:
   docker compose up -d

   Notes:
   - Postgres is exposed on 5432.
   - App is exposed on http://127.0.0.1:8000
   - .env provides defaults; the compose app service uses DATABASE_URL_DOCKER to force host=db.

2. View logs:
   docker compose logs -f app

3. Stop services:
   docker compose down

### Alembic usage
- Create a new migration after modifying models:
  alembic revision --autogenerate -m "init"
- Apply migrations:
  alembic upgrade head
- Downgrade:
  alembic downgrade -1

Alembic is configured to:
- Load DATABASE_URL from environment or .env via pydantic-settings
- Use async engine
- Target SQLAlchemy metadata at {{ package_name }}.db.base.Base.metadata

### Project layout
- src/{{ package_name }}/interface/http/app.py  FastAPI app with DI + ping
- src/{{ package_name }}/db/config.py           pydantic-settings config
- src/{{ package_name }}/db/session.py          async engine + session factory
- src/{{ package_name }}/db/base.py             Declarative base with UUID id
- src/{{ package_name }}/di.py                  DI container
- src/{{ package_name }}/usecases/pong.py       PongUseCase
- alembic/                                      Alembic env and versions
- docker-compose.yml                            DB + app services
- Dockerfile                                    Dev app image
- .env                                          Environment variables

### Environment variables
See .env. Typical values:
- POSTGRES_HOST, POSTGRES_PORT, POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD
- DATABASE_URL (local)
- DATABASE_URL_DOCKER (used by docker-compose app service)

When running inside docker-compose, the DB host is db. Locally, host is localhost by default.

### Tests
If pytest was selected:
  uv run pytest -q
