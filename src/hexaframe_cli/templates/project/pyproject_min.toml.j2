[project]
name = "{{ package_name }}"
version = "0.0.0"
requires-python = ">=3.11"
dependencies = [
    # Core framework from PyPI (or TestPyPI if configured below). Avoid local path overrides in templates.
    "hexaframe>=0.1.0",
    {% if http_adapter == "fastapi" %}"fastapi>=0.109.0", "uvicorn[standard]>=0.27.0",{% endif %}
    {% if tests == "pytest" %}"pytest>=8.0.0", "pytest-cov>=4.1.0",{% endif %}
    {% if db == "postgres" %}"sqlalchemy>=2.0.25", "asyncpg>=0.29.0",{% elif db == "sqlite" %}"sqlalchemy>=2.0.25",{% endif %}
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.1",
]

# Note: Template avoids local path overrides to keep installs reproducible.
# If you need local development against unreleased packages, prefer using a dev-specific config outside the template.

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Configure TestPyPI as an additional index (uncomment to enable).
# This allows resolving packages published to TestPyPI first, then falling back to PyPI.
[[tool.uv.index]]
name = "test-pypi"
url = "https://test.pypi.org/simple"
default = false

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"
default = true

# Resolution hint:
# - uv respects multiple [[tool.uv.index]] entries; you can also use --index and --extra-index-url flags.
# - To force test-only packages, set default = true on test-pypi and remove the PyPI entry.

[tool.hatch.build.targets.sdist]
include = ["/src"]

[tool.hatch.build.targets.wheel]
packages = ["src/{{ package_name }}"]
