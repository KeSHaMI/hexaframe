name: CI & Publish

on:
  push:
    branches: [ main, master ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Create uv venv and install dependencies
        run: |
          uv venv
          # Install dev and example extras so tests that import fastapi work
          uv pip install -e .[dev,example]
          uv pip install build

      - name: Lint
        run: |
          uv run ruff --version
          uv run ruff check .

      - name: Run tests
        run: |
          uv run pytest -q --disable-warnings -q

      - name: Build wheel and sdist
        run: |
          uv run python -m build
        env:
          # Ensure reproducible wheels when possible
          SOURCE_DATE_EPOCH: "1730412000"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      id-token: write  # mandatory for trusted publishing

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI (trusted publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true

  publish-testpypi:
    name: Publish to TestPyPI on non-tag pushes
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/tags/v')

    permissions:
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to TestPyPI (trusted publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          print-hash: true
